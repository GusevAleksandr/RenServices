{
  "swagger": "2.0",
  "info": {
    "description": "rest сервисы для работы с полномочиями сотрудника",
    "version": "1.0.0",
    "title": "rest сервисы для работы с полномочиями сотрудника"
  },
  "paths": {
    "/services/rest-api/simple/list/employeeAuthority": {
      "get": {
        "tags": [
          "employeeAuthorityListSimple"
        ],
        "summary": "получение списка полномичий сотрудника",
        "operationId": "simple_employeeAuthoritys_list",
        "description": "получение списка документов переданного типа с поддержкой простой фильтрации и сортировки. Возможно указание необходимых полей загрузки",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "../core/main.json#/parameters/filter"
          },
          {
            "$ref": "../core/main.json#/parameters/fields"
          },
          {
            "$ref": "../core/main.json#/parameters/onlyHeaderFields"
          },
          {
            "$ref": "../core/main.json#/parameters/ordersAsc"
          },
          {
            "$ref": "../core/main.json#/parameters/ordersDesc"
          },
          {
            "$ref": "../core/main.json#/parameters/page"
          },
          {
            "$ref": "../core/main.json#/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "массив доступных пользователю документов. Если заданы поля, необходимые для загрузки, или флаг onlyHeaderFields не выставлен в значение false возвращается массив объектов в виде пар ключ=значение. Если параметр onlyHeaderFields выставлен в значение false, возвращается полное JSON представление документа",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeAuthority"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/services/rest-api/list/employeeAuthority": {
      "post": {
        "tags": [
          "employeeAuthorityList"
        ],
        "summary": "сохранение параметров фильтрации",
        "operationId": "post_employeeAuthoritys_list",
        "description": "сохраниение параметров запроса на сервере приложений, для последующего использования в get запросе",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "../core/main.json#/parameters/postBody"
          }
        ],
        "responses": {
          "200": {
            "description": "в качестве ответа возвращается уникальный идентификатор запроса по переданным параметрам, который в последствии должен быть передан через запрос get",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/services/rest-api/list/employeeAuthority/{id}": {
      "get": {
        "tags": [
          "employeeAuthorityList"
        ],
        "summary": "получение списка документов",
        "operationId": "get_employeeAuthority_list",
        "description": "получение списка документов ранее переданными параметрами фильтрации. Параметры фильтрации передавались post-запросом на /services/rest-api/list/employeeAuthority",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "$ref": "../core/main.json#/parameters/queryId"
          },
          {
            "$ref": "../core/main.json#/parameters/page"
          },
          {
            "$ref": "../core/main.json#/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "массив доступных пользователю документов. Если в post-запросе, сохранившем запрос на выборку, заданы поля, необходимые для загрузки, или флаг onlyHeaderFields не выставлен в значение false возвращается массив объектов в виде пар ключ=значение. Если параметр onlyHeaderFields выставлен в значение false, возвращается полное JSON представление документа",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeAuthority"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "запрос с переданным идентификатором не найден"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/services/rest-api/employeeAuthoritys/{id}": {
      "get": {
        "tags": [
          "employeeAuthority"
        ],
        "summary": "получение документа по гуиду",
        "operationId": "employeeAuthority_get",
        "description": "получение полномочия пользователя по гуиду документа",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "гуид",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "найденный документ",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/EmployeeAuthority"
            }
          },
          "400": {
            "description": "bad input parameter"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "полномочия не найдены"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "EmployeeAuthority": {
      "type": "object",
      "properties": {
        "guidDoc": {
          "description": "ГУИД документа",
          "type": "string"
        },
        "signerPepGUID": {
          "description": "ГУИД карточки подписанта",
          "type": "string"
        },
        "state": {
          "description": "Статус",
          "type": "string"
        },
        "stateDate": {
          "description": "Дата назначения статуса",
          "type": "number"
        },
        "partnerGUID": {
          "description": "Гуид партнера",
          "type": "string"
        },
        "partnerName": {
          "description": "Название партнера",
          "type": "string"
        },
        "partnerINN": {
          "description": "Партнер ИНН",
          "type": "string"
        },
        "partnerRegion": {
          "description": "Регион закрепления партнера",
          "type": "string"
        },
        "surname": {
          "description": "Фамилия",
          "type": "string"
        },
        "name": {
          "description": "Имя",
          "type": "string"
        },
        "middleName": {
          "description": "Отчество",
          "type": "string"
        },
        "post": {
          "description": "Должность",
          "type": "string"
        },
        "login": {
          "description": "Логин подписанта ПЭП",
          "type": "string"
        },
        "forView": {
          "description": "Для просмотра",
          "type": "boolean"
        },
        "forSign": {
          "description": "Для подписи ПЭП",
          "type": "boolean"
        },
        "dateOn": {
          "description": "Дата начала полномочий",
          "type": "number"
        },
        "dateOff": {
          "description": "Дата окончания полномочий",
          "type": "number"
        },
        "boss": {
          "description": "Руководитель",
          "type": "boolean"
        },
        "notLimit": {
          "description": "Бессрочные полномочия",
          "type": "boolean"
        },
        "reason": {
          "description": "Причина отзыва",
          "type": "string"
        },
        "basisPowers": {
          "description": "Основание полномочий (родительный падеж)",
          "type": "string"
        },
        "postrp": {
          "description": "ДолжностьВрп",
          "type": "string"
        },
        "fiorp": {
          "description": "ФИО в РП",
          "type": "string"
        },
        "datePowerAsText": {
          "description": "Дата доверенности прописью",
          "type": "string"
        },
        "tradeEnterpriseSignerIsPartner": {
          "description": "Подписант совпадает с партнером",
          "type": "string"
        },
        "passportPASSSERIES": {
          "description": "Серия паспорта",
          "type": "string"
        },
        "passportPASSNUMBER": {
          "description": "Номер паспорта",
          "type": "string"
        },
        "passportISSUEWHOME": {
          "description": "Кем выдан",
          "type": "string"
        },
        "passportISSUEDATE": {
          "description": "Дата выдачи",
          "type": "number"
        },
        "passportDIVISIONCODE": {
          "description": "Код подразделения",
          "type": "string"
        },
        "passportDATEOFBIRTH": {
          "description": "Дата рождения",
          "type": "number"
        },
        "paNum": {
          "description": "Номер доверенности",
          "type": "string"
        },
        "paDateOn": {
          "description": "Дата доверенности",
          "type": "number"
        },
        "paDateOff": {
          "description": "Дата окончания действия",
          "type": "number"
        },
        "paFile": {
          "description": "Файл с доверенностью",
          "type": "string"
        },
        "fioFull": {
          "description": "ФИО полное",
          "type": "string"
        }
      }
    }
  }
}
